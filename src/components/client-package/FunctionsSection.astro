---
import ParameterList from "./ParameterList.astro";
import DescriptionBlock from "./DescriptionBlock.astro";
import type { MethodLike } from "../../schemas/client-package";
import type { MarkdownHeading } from "astro";

interface Props {
  functions?: MethodLike[];
}

const { functions } = Astro.props;

// Export heading generation function for TOC middleware
export function generateFunctionsHeadings(
  functions?: MethodLike[]
): MarkdownHeading[] {
  if (!functions || functions.length === 0) {
    return [];
  }

  return [
    {
      depth: 2,
      slug: "functions",
      text: "Functions",
    },
  ];
}
---

{
  functions && (
    <>
      <h2 id="functions" class="group">
        Functions
        <a
          href="#functions"
          aria-label="Link to this heading"
          class="ml-1 text-gray-400 opacity-0 group-hover:opacity-100 transition-opacity no-underline hover:no-underline"
        >
          Â¶
        </a>
      </h2>
      <ul>
        {functions.map((func) => (
          <li>
            <code>{func.name}</code>
            {func.async && <code> async</code>}
            (<ParameterList params={func.params} />)
            {func.returns && (
              <>
                : <code>{func.returns}</code>
              </>
            )}
            <DescriptionBlock description={func.description} />
          </li>
        ))}
      </ul>
    </>
  )
}
